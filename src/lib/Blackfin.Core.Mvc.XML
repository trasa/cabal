<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Blackfin.Core.Mvc</name>
    </assembly>
    <members>
        <member name="M:Blackfin.Core.Mvc.Extensions.ControllerExtensions.GetActionName(System.Linq.Expressions.LambdaExpression)">
            <summary>
            Extract the action name out of this expression.
            </summary>
            <param name="actionExpression"></param>
            <returns></returns>
        </member>
        <member name="M:Blackfin.Core.Mvc.Extensions.TypeExtensions.GetControllerName(System.Type)">
            <summary>
            Gets the name of the controller out of the type name, assuming this type is a controller of course....
            </summary>
            <param name="controllerType">type to extract name from.</param>
            <returns>name minus controller</returns>
        </member>
        <member name="M:Blackfin.Core.Mvc.Permit.Rules.ActionParameterService.BuildMap(System.Collections.Generic.IEnumerable{System.Web.Mvc.ParameterDescriptor},System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Takes a set of information about an Action call and builds a map of that information,
            which can be used to validate permissions and rules.
            </summary>
            <param name="parameters">The parameters.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns>map</returns>
        </member>
        <member name="M:Blackfin.Core.Mvc.Permit.Rules.ParameterMapBuilder.BuildName">
            <summary>
            Determine if we should use the parameterName as it appears natively, in code,
            or if the parameter has a [RuleContext] attached to it that changes the parameter name
            that we want exposed to the rule.
            </summary>
            <remarks>
            This attribute is used when the default convention isn't good enough - the parameter is named "id"
            but you want to use it in the rule as "districtId", for example.
            </remarks>
            <returns>name that the parameter will be known by</returns>
        </member>
    </members>
</doc>
